#include "Chunk.h"

Chunk::Chunk(Vector2 Pos, float NoiseValues[256]){
  //Allocated Memory for BlockList
  this->ChunkPos = Pos;
  BlockList.resize(256);
  for(int i = 0; i < 256; i++){
    int col = i % 16;
    int row = (i-(i%16))/16;
    BlockList[i] = new Block({Pos.x + col*blockLength,Pos.y + row*blockLength,blockLength,blockLength},NoiseValues[i]);
  }
  
}

Chunk::~Chunk(){
  for(int i = 0; i < 256; i++){
    delete BlockList[i];
  }
}

void Chunk::DrawChunk(){
  for(int i = 0; i < 256; i++){
    BlockList[i]->drawBlock();
  }
}

Block* Chunk::GetBlock(Vector2 Pos){
  int row = (modBlockLength(Pos.y) - ChunkPos.y)/blockLength;
  int col = (modBlockLength(Pos.x) - ChunkPos.x)/blockLength;
  return BlockList[row*16+col];
}


